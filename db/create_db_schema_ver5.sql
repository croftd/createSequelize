DROP SCHEMA IF EXISTS create_app;
-- MySQL Script generated by MySQL Workbench
-- Thu Nov 16 19:34:22 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema create_app
-- -----------------------------------------------------
-- Database schema created for CREATE App 2024 by WMD class 2023

-- -----------------------------------------------------
-- Schema create_app
--
-- Database schema created for CREATE App 2024 by WMD class 2023
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `create_app` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `create_app` ;

-- -----------------------------------------------------
-- Table `create_app`.`project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`project` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `theme` VARCHAR(45) NULL,
  `course_name` VARCHAR(45) NULL,
  `title` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `email_address` VARCHAR(45) NOT NULL,
  `is_participant` TINYINT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`user_project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`user_project` (
  `user_iduser` INT NOT NULL,
  `project_idProject` INT NOT NULL,
  PRIMARY KEY (`user_iduser`, `project_idProject`),
  INDEX `fk_user_has_project_project1_idx` (`project_idProject` ASC) ,
  INDEX `fk_user_has_project_user_idx` (`user_iduser` ASC) ,
  CONSTRAINT `fk_user_has_project_user`
    FOREIGN KEY (`user_iduser`)
    REFERENCES `create_app`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_project_project1`
    FOREIGN KEY (`project_idProject`)
    REFERENCES `create_app`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`user_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`user_role` (
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `role_id`),
  INDEX `fk_user_has_role_role1_idx` (`role_id` ASC),
  INDEX `fk_user_has_role_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_role_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `create_app`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_role_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `create_app`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`project_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`project_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`rubric`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`rubric` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type_id` INT NOT NULL,
  PRIMARY KEY (`id`, `type_id`),
  INDEX `type_id_idx` (`type_id` ASC),
  CONSTRAINT `type_id`
    FOREIGN KEY (`type_id`)
    REFERENCES `create_app`.`project_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`project_rubric`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`project_rubric` (
  `project_id` INT NOT NULL,
  `rubric_id` INT NOT NULL,
  INDEX `project_id_idx` (`project_id` ASC),
  INDEX `rubric_id_idx` (`rubric_id` ASC),
  PRIMARY KEY (`project_id`, `rubric_id`),
  CONSTRAINT `project_id`
    FOREIGN KEY (`project_id`)
    REFERENCES `create_app`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `rubric_id`
    FOREIGN KEY (`rubric_id`)
    REFERENCES `create_app`.`rubric` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`rubric_criteria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`rubric_criteria` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `rubric_id` INT NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  INDEX `rubric_id_idx_criteria` (`rubric_id` ASC),
  PRIMARY KEY (`id`, `rubric_id`),
  CONSTRAINT `rubric_id_fk_criteria`
    FOREIGN KEY (`rubric_id`)
    REFERENCES `create_app`.`rubric` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`attendee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`attendee` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `qr_code_date` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`attendee_vote`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`attendee_vote` (
  `vote` VARCHAR(45) NULL,
  `project_id` INT NOT NULL,
  `attendee_id` INT NOT NULL,
  PRIMARY KEY (`project_id`, `attendee_id`),
  INDEX `fk_attendee_vote_project1_idx` (`project_id` ASC),
  INDEX `fk_attendee_vote_attendee1_idx` (`attendee_id` ASC),
  CONSTRAINT `fk_attendee_vote_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `create_app`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_attendee_vote_attendee1`
    FOREIGN KEY (`attendee_id`)
    REFERENCES `create_app`.`attendee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `is_virtual` TINYINT NULL COMMENT 'Determines if this event is virtual',
  `event_description` VARCHAR(45) NOT NULL,
  `event_location` VARCHAR(45) NOT NULL COMMENT 'Location of the event - e.g. Upper Cafeteria, Theatre, Twitter',
  `start_time` DATE NULL,
  `end_time` DATE NULL,
  `capacity` INT(1) NULL COMMENT 'determines how many participants can present at this event (e.g. the cafeteria has space for 50 poster presentation)',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`event_project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`event_project` (
  `event_id` INT NOT NULL,
  `project_id` INT NOT NULL,
  PRIMARY KEY (`event_id`, `project_id`),
  INDEX `fk_event_has_project_project1_idx` (`project_id` ASC),
  INDEX `fk_event_has_project_event1_idx` (`event_id` ASC),
  CONSTRAINT `fk_event_has_project_event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `create_app`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_has_project_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `create_app`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`project_has_project_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`project_has_project_type` (
  `project_id` INT NOT NULL,
  `project_type_id` INT NOT NULL,
  PRIMARY KEY (`project_id`, `project_type_id`),
  INDEX `fk_project_has_project_type_project_type1_idx` (`project_type_id` ASC),
  INDEX `fk_project_has_project_type_project1_idx` (`project_id` ASC),
  CONSTRAINT `fk_project_has_project_type_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `create_app`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_project_has_project_type_project_type1`
    FOREIGN KEY (`project_type_id`)
    REFERENCES `create_app`.`project_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`participant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`participant` (
  `id` INT NOT NULL COMMENT 'This is the id of the user (a participant is a type of user)',
  `is_undergrad` TINYINT NOT NULL,
  `major` VARCHAR(45) NOT NULL,
  `campus` VARCHAR(45) NOT NULL,
  `course_code` VARCHAR(45) NOT NULL,
  `viu_advisor` VARCHAR(45) NOT NULL,
  `user_id` INT NOT NULL,
  `group_member1_name` VARCHAR(45) NULL COMMENT 'The group_member fields were added to store the names of group members - these will be null if it is an individual project',
  `group_member2_name` VARCHAR(45) NULL,
  `group_member3_name` VARCHAR(45) NULL,
  `group_member4_name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `user_id`),
  INDEX `fk_participant_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_participant_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `create_app`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`mark`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`mark` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `criteria_id` INT NOT NULL,
  `project_id` INT NOT NULL,
  PRIMARY KEY (`id`, `criteria_id`),
  INDEX `criteria_id_idx_mark` (`criteria_id` ASC),
  CONSTRAINT `criteria_id_fk_mark`
    FOREIGN KEY (`criteria_id`)
    REFERENCES `create_app`.`rubric_criteria` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `create_app`.`comment_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`comment_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `create_app`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`comment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `rubric_id` INT NOT NULL,
  `comment` TEXT NOT NULL,
  `comment_type_id` INT NOT NULL,
  PRIMARY KEY (`id`, `comment_type_id`, `rubric_id`),
  INDEX `rubric_id_idx_comment` (`rubric_id` ASC),
  INDEX `comment_type_id_idx_comment` (`comment_type_id` ASC),
  CONSTRAINT `rubric_id_fk_comment`
    FOREIGN KEY (`rubric_id`)
    REFERENCES `create_app`.`rubric` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `comment_type_id_fk_comment`
    FOREIGN KEY (`comment_type_id`)
    REFERENCES `create_app`.`comment_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
INSERT_METHOD = LAST;


-- -----------------------------------------------------
-- Table `create_app`.`rubric_nomination`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `create_app`.`rubric_nomination` (
  `rubric_id` INT NOT NULL,
  `adjudimentor_user_id` INT NOT NULL,
  INDEX `rubric_id_idx_nomination` (`rubric_id` ASC),
  INDEX `adjudimentor_user_id_idx_nomination` (`adjudimentor_user_id` ASC),
  PRIMARY KEY (`adjudimentor_user_id`, `rubric_id`),
  CONSTRAINT `rubric_id_fk_nomination`
    FOREIGN KEY (`rubric_id`)
    REFERENCES `create_app`.`rubric` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `adjudimentor_user_id_fk_nomination`
    FOREIGN KEY (`adjudimentor_user_id`)
    REFERENCES `create_app`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;